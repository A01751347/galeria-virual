{"ast":null,"code":"var _jsxFileName = \"/Users/santiserrano/Documents/GitHub/galeria-virual/galeria-virtual-frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport authService from '../services/authService';\n\n// Crear contexto con valor inicial\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Hook personalizado para usar el contexto\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\n// Props para el proveedor de contexto\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Componente proveedor de contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(authService.getToken());\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Efecto para cargar usuario al iniciar o cambiar token\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n      try {\n        const userData = await authService.getCurrentUser();\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error loading user:', error);\n        setUser(null);\n        setIsAuthenticated(false);\n        authService.logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Función para iniciar sesión\n  const login = async credentials => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await authService.login(credentials);\n      setToken(response.token);\n      setUser(response.user);\n      setIsAuthenticated(true);\n\n      // Guardar token en localStorage\n      authService.setToken(response.token);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error al iniciar sesión');\n      setIsAuthenticated(false);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Función para registrarse\n  const register = async data => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await authService.register(data);\n      setToken(response.token);\n      setUser(response.user);\n      setIsAuthenticated(true);\n\n      // Guardar token en localStorage\n      authService.setToken(response.token);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Error al registrarse');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = () => {\n    authService.logout();\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Función para limpiar errores\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Valor del contexto\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"t5q2X9IPiR1BdSEPi6QxKNDF+l0=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","getToken","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","error","setError","loadUser","userData","getCurrentUser","console","logout","login","credentials","response","_error$response","_error$response$data","data","message","register","_error$response2","_error$response2$data","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/santiserrano/Documents/GitHub/galeria-virual/galeria-virtual-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { AuthState, LoginCredentials, RegisterData, User } from '../types/auth';\nimport authService from '../services/authService';\n\n// Crear contexto con valor inicial\nconst AuthContext = createContext<AuthState | null>(null);\n\n// Hook personalizado para usar el contexto\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n\n// Props para el proveedor de contexto\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// Componente proveedor de contexto\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(authService.getToken());\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Efecto para cargar usuario al iniciar o cambiar token\n  useEffect(() => {\n    const loadUser = async () => {\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        const userData = await authService.getCurrentUser();\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error loading user:', error);\n        setUser(null);\n        setIsAuthenticated(false);\n        authService.logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadUser();\n  }, [token]);\n\n  // Función para iniciar sesión\n  const login = async (credentials: LoginCredentials) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await authService.login(credentials);\n      \n      setToken(response.token);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      \n      // Guardar token en localStorage\n      authService.setToken(response.token);\n    } catch (error: any) {\n      setError(error.response?.data?.message || 'Error al iniciar sesión');\n      setIsAuthenticated(false);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Función para registrarse\n  const register = async (data: RegisterData) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await authService.register(data);\n      \n      setToken(response.token);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      \n      // Guardar token en localStorage\n      authService.setToken(response.token);\n    } catch (error: any) {\n      setError(error.response?.data?.message || 'Error al registrarse');\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Función para cerrar sesión\n  const logout = () => {\n    authService.logout();\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Función para limpiar errores\n  const clearError = () => {\n    setError(null);\n  };\n\n  // Valor del contexto\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    register,\n    logout,\n    clearError\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}