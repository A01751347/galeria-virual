{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport artworkService from '../services/artworkService';\n// Hook para obtener todas las obras con filtros opcionales\nexport function useArtworks(filters) {\n  _s();\n  const {\n    data,\n    isLoading,\n    error,\n    refetch\n  } = useQuery(['artworks', filters], () => artworkService.getArtworks(filters), {\n    keepPreviousData: true,\n    staleTime: 1000 * 60 * 5 // 5 minutos\n  });\n  return {\n    data,\n    isLoading,\n    error,\n    refetch\n  };\n}\n\n// Hook para obtener obras destacadas\n_s(useArtworks, \"yikAt8TET1R6zMqPPBLxeeIrY9Y=\", false, function () {\n  return [useQuery];\n});\nexport function useFeaturedArtworks() {\n  _s2();\n  const {\n    data,\n    isLoading,\n    error,\n    refetch\n  } = useQuery('featuredArtworks', artworkService.getFeaturedArtworks, {\n    staleTime: 1000 * 60 * 15 // 15 minutos\n  });\n  return {\n    data,\n    isLoading,\n    error,\n    refetch\n  };\n}\n\n// Hook para obtener obras por categoría\n_s2(useFeaturedArtworks, \"yikAt8TET1R6zMqPPBLxeeIrY9Y=\", false, function () {\n  return [useQuery];\n});\nexport function useArtworksByCategory(categoryId, onlyAvailable = false) {\n  _s3();\n  const {\n    data,\n    isLoading,\n    error,\n    refetch\n  } = useQuery(['artworksByCategory', categoryId, onlyAvailable], () => artworkService.getArtworksByCategory(categoryId, onlyAvailable), {\n    enabled: !!categoryId,\n    keepPreviousData: true\n  });\n  return {\n    data,\n    isLoading,\n    error,\n    refetch\n  };\n}\n\n// Hook para obtener obras por artista\n_s3(useArtworksByCategory, \"yikAt8TET1R6zMqPPBLxeeIrY9Y=\", false, function () {\n  return [useQuery];\n});\nexport function useArtworksByArtist(artistId, onlyAvailable = false) {\n  _s4();\n  const {\n    data,\n    isLoading,\n    error,\n    refetch\n  } = useQuery(['artworksByArtist', artistId, onlyAvailable], () => artworkService.getArtworksByArtist(artistId, onlyAvailable), {\n    enabled: !!artistId,\n    keepPreviousData: true\n  });\n  return {\n    data,\n    isLoading,\n    error,\n    refetch\n  };\n}\n\n// Hook para buscar obras\n_s4(useArtworksByArtist, \"yikAt8TET1R6zMqPPBLxeeIrY9Y=\", false, function () {\n  return [useQuery];\n});\nexport function useSearchArtworks(term, onlyAvailable = false) {\n  _s5();\n  const {\n    data,\n    isLoading,\n    error,\n    refetch\n  } = useQuery(['searchArtworks', term, onlyAvailable], () => artworkService.searchArtworks(term, onlyAvailable), {\n    enabled: term.length > 2,\n    // Solo buscar si hay al menos 3 caracteres\n    keepPreviousData: true\n  });\n  return {\n    data,\n    isLoading,\n    error,\n    refetch\n  };\n}\n\n// Hook para obtener detalle de una obra\n_s5(useSearchArtworks, \"yikAt8TET1R6zMqPPBLxeeIrY9Y=\", false, function () {\n  return [useQuery];\n});\nexport function useArtworkDetail(id) {\n  _s6();\n  return useQuery(['artworkDetail', id], () => artworkService.getArtworkDetail(id), {\n    enabled: !!id\n  });\n}\n\n// Hook para obtener detalle de una obra por código QR\n_s6(useArtworkDetail, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport function useArtworkByQR(qrCode) {\n  _s7();\n  return useQuery(['artworkByQR', qrCode], () => artworkService.getArtworkByQR(qrCode), {\n    enabled: !!qrCode\n  });\n}\n_s7(useArtworkByQR, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","artworkService","useArtworks","filters","_s","data","isLoading","error","refetch","getArtworks","keepPreviousData","staleTime","useFeaturedArtworks","_s2","getFeaturedArtworks","useArtworksByCategory","categoryId","onlyAvailable","_s3","getArtworksByCategory","enabled","useArtworksByArtist","artistId","_s4","getArtworksByArtist","useSearchArtworks","term","_s5","searchArtworks","length","useArtworkDetail","id","_s6","getArtworkDetail","useArtworkByQR","qrCode","_s7","getArtworkByQR"],"sources":["/Users/santiserrano/Documents/GitHub/galeria-virual/galeria-virtual-frontend/src/hooks/useArtwork.ts"],"sourcesContent":["import { useQuery } from 'react-query';\nimport artworkService from '../services/artworkService';\nimport { ArtworkFilters, ArtworkQuery } from '../types/artwork';\n\n// Hook para obtener todas las obras con filtros opcionales\nexport function useArtworks(filters?: ArtworkFilters): ArtworkQuery {\n  const { data, isLoading, error, refetch } = useQuery(\n    ['artworks', filters],\n    () => artworkService.getArtworks(filters),\n    {\n      keepPreviousData: true,\n      staleTime: 1000 * 60 * 5, // 5 minutos\n    }\n  );\n  \n  return { data, isLoading, error, refetch };\n}\n\n// Hook para obtener obras destacadas\nexport function useFeaturedArtworks(): ArtworkQuery {\n  const { data, isLoading, error, refetch } = useQuery(\n    'featuredArtworks',\n    artworkService.getFeaturedArtworks,\n    {\n      staleTime: 1000 * 60 * 15, // 15 minutos\n    }\n  );\n  \n  return { data, isLoading, error, refetch };\n}\n\n// Hook para obtener obras por categoría\nexport function useArtworksByCategory(categoryId: number, onlyAvailable: boolean = false): ArtworkQuery {\n  const { data, isLoading, error, refetch } = useQuery(\n    ['artworksByCategory', categoryId, onlyAvailable],\n    () => artworkService.getArtworksByCategory(categoryId, onlyAvailable),\n    {\n      enabled: !!categoryId,\n      keepPreviousData: true,\n    }\n  );\n  \n  return { data, isLoading, error, refetch };\n}\n\n// Hook para obtener obras por artista\nexport function useArtworksByArtist(artistId: number, onlyAvailable: boolean = false): ArtworkQuery {\n  const { data, isLoading, error, refetch } = useQuery(\n    ['artworksByArtist', artistId, onlyAvailable],\n    () => artworkService.getArtworksByArtist(artistId, onlyAvailable),\n    {\n      enabled: !!artistId,\n      keepPreviousData: true,\n    }\n  );\n  \n  return { data, isLoading, error, refetch };\n}\n\n// Hook para buscar obras\nexport function useSearchArtworks(term: string, onlyAvailable: boolean = false): ArtworkQuery {\n  const { data, isLoading, error, refetch } = useQuery(\n    ['searchArtworks', term, onlyAvailable],\n    () => artworkService.searchArtworks(term, onlyAvailable),\n    {\n      enabled: term.length > 2, // Solo buscar si hay al menos 3 caracteres\n      keepPreviousData: true,\n    }\n  );\n  \n  return { data, isLoading, error, refetch };\n}\n\n// Hook para obtener detalle de una obra\nexport function useArtworkDetail(id: number) {\n  return useQuery(\n    ['artworkDetail', id],\n    () => artworkService.getArtworkDetail(id),\n    {\n      enabled: !!id,\n    }\n  );\n}\n\n// Hook para obtener detalle de una obra por código QR\nexport function useArtworkByQR(qrCode: string) {\n  return useQuery(\n    ['artworkByQR', qrCode],\n    () => artworkService.getArtworkByQR(qrCode),\n    {\n      enabled: !!qrCode,\n    }\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}