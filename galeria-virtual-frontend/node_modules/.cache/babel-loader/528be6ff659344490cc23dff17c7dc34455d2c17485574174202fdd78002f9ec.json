{"ast":null,"code":"import api from './api';\nimport jwt_decode from 'jwt-decode';\nconst TOKEN_KEY = `${import.meta.env.VITE_STORAGE_PREFIX}token`;\nconst USER_KEY = `${import.meta.env.VITE_STORAGE_PREFIX}user`;\n\n// Iniciar sesión\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/auth/login', credentials);\n    if (!response.data.success || !response.data.data) {\n      throw new Error(response.data.message || 'Error al iniciar sesión');\n    }\n    const {\n      token,\n      user\n    } = response.data.data;\n\n    // Guardar token y usuario en localStorage\n    setToken(token);\n    setUser(user);\n    return {\n      token,\n      user\n    };\n  } catch (error) {\n    console.error('Error en login:', error);\n    throw error;\n  }\n};\n\n// Registrar nuevo usuario\nexport const register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    if (!response.data.success || !response.data.data) {\n      throw new Error(response.data.message || 'Error al registrar usuario');\n    }\n    return response.data.data;\n  } catch (error) {\n    console.error('Error en registro:', error);\n    throw error;\n  }\n};\n\n// Cerrar sesión\nexport const logout = () => {\n  removeToken();\n  removeUser();\n};\n\n// Verificar autenticación\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) {\n    return false;\n  }\n  try {\n    const decoded = jwt_decode(token);\n    const currentTime = Date.now() / 1000;\n\n    // Verificar si el token no ha expirado\n    return decoded.exp > currentTime;\n  } catch {\n    return false;\n  }\n};\n\n// Obtener usuario actual\nexport const getCurrentUser = () => {\n  const userStr = localStorage.getItem(USER_KEY);\n  return userStr ? JSON.parse(userStr) : null;\n};\n\n// Guardar token en localStorage\nexport const setToken = token => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\n\n// Obtener token de localStorage\nexport const getToken = () => {\n  return localStorage.getItem(TOKEN_KEY);\n};\n\n// Eliminar token de localStorage\nexport const removeToken = () => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\n// Guardar usuario en localStorage\nexport const setUser = user => {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n};\n\n// Eliminar usuario de localStorage\nexport const removeUser = () => {\n  localStorage.removeItem(USER_KEY);\n};","map":{"version":3,"names":["api","jwt_decode","TOKEN_KEY","import","meta","env","VITE_STORAGE_PREFIX","USER_KEY","login","credentials","response","post","data","success","Error","message","token","user","setToken","setUser","error","console","register","userData","logout","removeToken","removeUser","isAuthenticated","getToken","decoded","currentTime","Date","now","exp","getCurrentUser","userStr","localStorage","getItem","JSON","parse","setItem","removeItem","stringify"],"sources":["/Users/santiserrano/Documents/GitHub/galeria-virual/galeria-virtual-frontend/src/services/authService.ts"],"sourcesContent":["import api from './api';\nimport { LoginCredentials, Usuario, ApiResponse } from '../types';\nimport jwt_decode from 'jwt-decode';\n\nconst TOKEN_KEY = `${import.meta.env.VITE_STORAGE_PREFIX}token`;\nconst USER_KEY = `${import.meta.env.VITE_STORAGE_PREFIX}user`;\n\n// Iniciar sesión\nexport const login = async (credentials: LoginCredentials): Promise<{ token: string; user: Usuario }> => {\n  try {\n    const response = await api.post<ApiResponse<{ token: string; user: Usuario }>>('/auth/login', credentials);\n    \n    if (!response.data.success || !response.data.data) {\n      throw new Error(response.data.message || 'Error al iniciar sesión');\n    }\n    \n    const { token, user } = response.data.data;\n    \n    // Guardar token y usuario en localStorage\n    setToken(token);\n    setUser(user);\n    \n    return { token, user };\n  } catch (error) {\n    console.error('Error en login:', error);\n    throw error;\n  }\n};\n\n// Registrar nuevo usuario\nexport const register = async (userData: Omit<Usuario, 'id' | 'rol' | 'fecha_creacion' | 'fecha_actualizacion' | 'ultimo_acceso'>): Promise<Usuario> => {\n  try {\n    const response = await api.post<ApiResponse<Usuario>>('/auth/register', userData);\n    \n    if (!response.data.success || !response.data.data) {\n      throw new Error(response.data.message || 'Error al registrar usuario');\n    }\n    \n    return response.data.data;\n  } catch (error) {\n    console.error('Error en registro:', error);\n    throw error;\n  }\n};\n\n// Cerrar sesión\nexport const logout = (): void => {\n  removeToken();\n  removeUser();\n};\n\n// Verificar autenticación\nexport const isAuthenticated = (): boolean => {\n  const token = getToken();\n  \n  if (!token) {\n    return false;\n  }\n  \n  try {\n    const decoded: any = jwt_decode(token);\n    const currentTime = Date.now() / 1000;\n    \n    // Verificar si el token no ha expirado\n    return decoded.exp > currentTime;\n  } catch {\n    return false;\n  }\n};\n\n// Obtener usuario actual\nexport const getCurrentUser = (): Usuario | null => {\n  const userStr = localStorage.getItem(USER_KEY);\n  return userStr ? JSON.parse(userStr) : null;\n};\n\n// Guardar token en localStorage\nexport const setToken = (token: string): void => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\n\n// Obtener token de localStorage\nexport const getToken = (): string | null => {\n  return localStorage.getItem(TOKEN_KEY);\n};\n\n// Eliminar token de localStorage\nexport const removeToken = (): void => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n\n// Guardar usuario en localStorage\nexport const setUser = (user: Usuario): void => {\n  localStorage.setItem(USER_KEY, JSON.stringify(user));\n};\n\n// Eliminar usuario de localStorage\nexport const removeUser = (): void => {\n  localStorage.removeItem(USER_KEY);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}