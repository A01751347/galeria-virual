{"ast":null,"code":"import api from './api';\nconst artistService = {\n  // Obtener todos los artistas con filtros opcionales\n  getArtists: async filters => {\n    const response = await api.get('/artistas', {\n      params: filters\n    });\n    return response.data.data;\n  },\n  // Obtener detalle de un artista\n  getArtistDetail: async id => {\n    const response = await api.get(`/artistas/${id}`);\n    const artist = response.data.data;\n\n    // Obtener las obras del artista\n    const artworksResponse = await api.get(`/obras/artista/${id}`);\n    return {\n      artist,\n      artworks: artworksResponse.data.data\n    };\n  },\n  // Crear un nuevo artista (requiere autenticación de admin)\n  createArtist: async artistData => {\n    const response = await api.post('/artistas', artistData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data.data;\n  },\n  // Actualizar un artista (requiere autenticación de admin)\n  updateArtist: async (id, artistData) => {\n    const response = await api.put(`/artistas/${id}`, artistData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data.data;\n  },\n  // Eliminar un artista (requiere autenticación de admin)\n  deleteArtist: async id => {\n    await api.delete(`/artistas/${id}`);\n  }\n};\nexport default artistService;","map":{"version":3,"names":["api","artistService","getArtists","filters","response","get","params","data","getArtistDetail","id","artist","artworksResponse","artworks","createArtist","artistData","post","headers","updateArtist","put","deleteArtist","delete"],"sources":["/Users/santiserrano/Documents/GitHub/galeria-virual/galeria-virtual-frontend/src/services/artistService.ts"],"sourcesContent":["import api from './api';\nimport { Artist, ArtistDetailResponse, ArtistFilters } from '../types/artist';\n\nconst artistService = {\n  // Obtener todos los artistas con filtros opcionales\n  getArtists: async (filters?: ArtistFilters): Promise<Artist[]> => {\n    const response = await api.get('/artistas', { params: filters });\n    return response.data.data;\n  },\n  \n  // Obtener detalle de un artista\n  getArtistDetail: async (id: number): Promise<ArtistDetailResponse> => {\n    const response = await api.get(`/artistas/${id}`);\n    const artist = response.data.data;\n    \n    // Obtener las obras del artista\n    const artworksResponse = await api.get(`/obras/artista/${id}`);\n    \n    return {\n      artist,\n      artworks: artworksResponse.data.data\n    };\n  },\n  \n  // Crear un nuevo artista (requiere autenticación de admin)\n  createArtist: async (artistData: FormData): Promise<Artist> => {\n    const response = await api.post('/artistas', artistData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data.data;\n  },\n  \n  // Actualizar un artista (requiere autenticación de admin)\n  updateArtist: async (id: number, artistData: FormData): Promise<Artist> => {\n    const response = await api.put(`/artistas/${id}`, artistData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data.data;\n  },\n  \n  // Eliminar un artista (requiere autenticación de admin)\n  deleteArtist: async (id: number): Promise<void> => {\n    await api.delete(`/artistas/${id}`);\n  },\n};\n\nexport default artistService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,MAAMC,aAAa,GAAG;EACpB;EACAC,UAAU,EAAE,MAAOC,OAAuB,IAAwB;IAChE,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,EAAE;MAAEC,MAAM,EAAEH;IAAQ,CAAC,CAAC;IAChE,OAAOC,QAAQ,CAACG,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAC,eAAe,EAAE,MAAOC,EAAU,IAAoC;IACpE,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAaI,EAAE,EAAE,CAAC;IACjD,MAAMC,MAAM,GAAGN,QAAQ,CAACG,IAAI,CAACA,IAAI;;IAEjC;IACA,MAAMI,gBAAgB,GAAG,MAAMX,GAAG,CAACK,GAAG,CAAC,kBAAkBI,EAAE,EAAE,CAAC;IAE9D,OAAO;MACLC,MAAM;MACNE,QAAQ,EAAED,gBAAgB,CAACJ,IAAI,CAACA;IAClC,CAAC;EACH,CAAC;EAED;EACAM,YAAY,EAAE,MAAOC,UAAoB,IAAsB;IAC7D,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACe,IAAI,CAAC,WAAW,EAAED,UAAU,EAAE;MACvDE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACG,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAU,YAAY,EAAE,MAAAA,CAAOR,EAAU,EAAEK,UAAoB,KAAsB;IACzE,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAC,aAAaT,EAAE,EAAE,EAAEK,UAAU,EAAE;MAC5DE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACG,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAY,YAAY,EAAE,MAAOV,EAAU,IAAoB;IACjD,MAAMT,GAAG,CAACoB,MAAM,CAAC,aAAaX,EAAE,EAAE,CAAC;EACrC;AACF,CAAC;AAED,eAAeR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}