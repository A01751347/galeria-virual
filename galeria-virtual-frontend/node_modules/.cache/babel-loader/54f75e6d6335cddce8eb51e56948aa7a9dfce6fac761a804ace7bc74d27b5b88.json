{"ast":null,"code":"/**\n * Formatea un número como moneda local.\n * @param value - El número que se desea formatear.\n * @param locale - Localización (por defecto 'es-CO' para Colombia).\n * @param currency - Tipo de moneda (por defecto 'COP' para pesos colombianos).\n * @returns Una cadena formateada como moneda.\n */\nexport function formatCurrency(value, locale = 'es-CO', currency = 'COP') {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 0\n  }).format(value);\n}","map":{"version":3,"names":["formatCurrency","value","locale","currency","Intl","NumberFormat","style","minimumFractionDigits","format"],"sources":["/Users/santiserrano/Documents/GitHub/galeria-virual/galeria-virtual-frontend/src/utils/formatters.ts"],"sourcesContent":["/**\n * Formatea un número como moneda local.\n * @param value - El número que se desea formatear.\n * @param locale - Localización (por defecto 'es-CO' para Colombia).\n * @param currency - Tipo de moneda (por defecto 'COP' para pesos colombianos).\n * @returns Una cadena formateada como moneda.\n */\nexport function formatCurrency(\n  value: number,\n  locale: string = 'es-CO',\n  currency: string = 'COP'\n): string {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 0,\n  }).format(value);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAcA,CAC5BC,KAAa,EACbC,MAAc,GAAG,OAAO,EACxBC,QAAgB,GAAG,KAAK,EAChB;EACR,OAAO,IAAIC,IAAI,CAACC,YAAY,CAACH,MAAM,EAAE;IACnCI,KAAK,EAAE,UAAU;IACjBH,QAAQ;IACRI,qBAAqB,EAAE;EACzB,CAAC,CAAC,CAACC,MAAM,CAACP,KAAK,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}