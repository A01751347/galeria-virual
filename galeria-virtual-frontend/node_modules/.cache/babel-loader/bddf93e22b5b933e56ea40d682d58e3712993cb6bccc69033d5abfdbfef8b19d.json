{"ast":null,"code":"import api from './api';\nconst authService = {\n  // Iniciar sesión\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data.data;\n  },\n  // Registrar nuevo usuario\n  register: async data => {\n    const response = await api.post('/auth/register', data);\n    return response.data.data;\n  },\n  // Obtener información del usuario autenticado\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data.data;\n  },\n  // Cerrar sesión (eliminar token local)\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  // Comprobar si hay un token almacenado\n  isAuthenticated: () => {\n    return localStorage.getItem('token') !== null;\n  },\n  // Guardar token en localStorage\n  setToken: token => {\n    localStorage.setItem('token', token);\n  },\n  // Obtener token desde localStorage\n  getToken: () => {\n    return localStorage.getItem('token');\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","credentials","response","post","data","register","getCurrentUser","get","logout","localStorage","removeItem","isAuthenticated","getItem","setToken","token","setItem","getToken"],"sources":["/Users/santiserrano/Documents/GitHub/galeria-virual/galeria-virtual-frontend/src/services/categoryService.ts"],"sourcesContent":["import api from './api';\nimport { AuthResponse, LoginCredentials, RegisterData, User } from '../types/auth';\n\nconst authService = {\n  // Iniciar sesión\n  login: async (credentials: LoginCredentials): Promise<AuthResponse> => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data.data;\n  },\n  \n  // Registrar nuevo usuario\n  register: async (data: RegisterData): Promise<AuthResponse> => {\n    const response = await api.post('/auth/register', data);\n    return response.data.data;\n  },\n  \n  // Obtener información del usuario autenticado\n  getCurrentUser: async (): Promise<User> => {\n    const response = await api.get('/auth/me');\n    return response.data.data;\n  },\n  \n  // Cerrar sesión (eliminar token local)\n  logout: (): void => {\n    localStorage.removeItem('token');\n  },\n  \n  // Comprobar si hay un token almacenado\n  isAuthenticated: (): boolean => {\n    return localStorage.getItem('token') !== null;\n  },\n  \n  // Guardar token en localStorage\n  setToken: (token: string): void => {\n    localStorage.setItem('token', token);\n  },\n  \n  // Obtener token desde localStorage\n  getToken: (): string | null => {\n    return localStorage.getItem('token');\n  }\n};\n\nexport default authService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,MAAMC,WAAW,GAAG;EAClB;EACAC,KAAK,EAAE,MAAOC,WAA6B,IAA4B;IACrE,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;IAC3D,OAAOC,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAC,QAAQ,EAAE,MAAOD,IAAkB,IAA4B;IAC7D,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,gBAAgB,EAAEC,IAAI,CAAC;IACvD,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAE,cAAc,EAAE,MAAAA,CAAA,KAA2B;IACzC,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACS,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOL,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACAI,MAAM,EAAEA,CAAA,KAAY;IAClBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED;EACAC,eAAe,EAAEA,CAAA,KAAe;IAC9B,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;EAC/C,CAAC;EAED;EACAC,QAAQ,EAAGC,KAAa,IAAW;IACjCL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;EACtC,CAAC;EAED;EACAE,QAAQ,EAAEA,CAAA,KAAqB;IAC7B,OAAOP,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;AACF,CAAC;AAED,eAAeb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}